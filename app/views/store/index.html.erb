<script src="https://google-code-prettify.googlecode.com/svn/loader/run_prettify.js"></script>
<style type="text/css">
	body{
		width:100%;
		height:100%;
		margin:0px;
		padding:0px;
		font-family:Arial;
		color:#6e6e6e;
		font-size:14px
	}
	h2{
		text-transform: uppercase;
		font-size:14px;
		font-weight:normal;
		padding:15px 30px;
		margin:0px;
	}
	h1{
		font-weight:normal;
		font-size:36px;
		padding:0px 0px 30px 0px;
		margin:0px;
		color:#353535;
		border-bottom:1px solid #eee;
	}
	a{
		text-decoration: none;
		color:#0059a9;
	}
	form div{
		padding:15px 30px;
	}
	form div select{
		width:100%;
	}
	p, li{
		line-height:25px;
	}
	pre.prettyprint{
		padding:0px;
		border:0px;
	}
	@-webkit-keyframes rotate {
	  from {
	    -webkit-transform: rotate(0deg);
	  }
	  to { 
	    -webkit-transform: rotate(360deg);
	  }
	}
	.loading{	
	    -webkit-animation-name:rotate; 
	    -webkit-animation-duration:1s; 
	    -webkit-animation-iteration-count: infinite;
	    -webkit-transition-animation-function: linear;  
	}
	.google-visualization-table-th{
		color:#0059a9;
	}
	#header{
		height:50px;
		width:1024px;
		color:#FFF;
		font-size:14px;
		background:#149ecd;
		font-weight:bold;
	}
	.tab{
		line-height:50px;
		padding:0px 15px;
		float:left;
		height:50px;
	}
	.tab.selected{
		background:#1490ba;
	}
	.row{
		width:100%;
		padding:15px 30px;
		box-sizing:border-box;
		height:45px;
		line-height:15px;
		border-top:1px solid #eee;
	}
	.row.selected{
		background:#f6f6f6;
	}
	#left{
		width:300px;
		height:648px;
		padding-top:50px;
		float:left;
		border-right:1px solid #eeeeee;
		background:#fbfbfb;
	}
	#right, #code{
		width:723px;
		height:698px;
		padding:50px 40px 40px 40px;
		box-sizing:border-box;
		float:left;
		overflow:scroll;
		-webkit-overflow-scrolling: touch;
	}
	#code{
		display:none;
	}
	#profile{
		padding: 0px 30px 20px 30px;
		display:table;
	}
	#profile #picture{
		width:40px;
		height:40px;
		border-radius:2px;
		float:left;
		background-image: url('<%= @user["photo"]["smallPhotoUrl"] %>');
		background-size:100% 100%;
		background-repeat:no-repeat;
	}
	#profile #text{
		display:table;
	}
	#name{
		font-weight:bold;
		padding:4px 0px 4px 15px;
		color:#0059a9;
		font-size:16px;
	}
	#title{
		font-size:12px;
		padding:0px 0px 0px 15px;
	}
	#chartArea{
		width:100%;
		height:516px;
		padding-top:30px;
	}
	#report{
		width:100%;
		height:516px;
	}
	#header #reloadimg{
		float: right;
		height: 30px;
		position: relative;
		top: 8px;
		right: 15px;
	}
	#header #icon{
		float:left;
		height: 30px;
		position: relative;
		top:10px;
		margin:0px 15px 0px 30px;
	}
</style>
<div id="header">
	<img id="icon" src="/images/cloud.png">
	</img>
	<div class="tab selected" id="reportTab" onclick="$('#code').hide();$('#right').show();$('#codeTab').removeClass('selected');$('#reportTab').addClass('selected');">
		Reports
	</div>
	<div class="tab" id="codeTab" onclick="$('#code').show();$('#right').hide();$('#codeTab').addClass('selected');$('#reportTab').removeClass('selected');">
		Code
	</div>
	<img src="/images/loading.png" id="reloadimg"></img>
</div>

<div id="left">
	<div id="profile">
		<div id="picture"></div>
		<div id="text">
			<div id="name">
				<%= @user["name"] %>
			</div>
			<div id="title">
				Reporting Wizard
			</div>
		</div>
	</div>
	<h2>Pick a Report</h2>
	<form method="post" action="/reports/run" id="fetchreport"> 
		<div>
			<select name="reportid" id="reportid">
				<% @reports["records"].each do |p| %>
					<option value="<%= p["Id"] %>"><%= p["Name"] %></option>
				<% end %>
			</select>
		</div>
	</form>

	<h2>Choose a Chart</h2>
	<div class="row selected" id="column" onclick="changeChartType('column');$('.row').removeClass('selected');$('#column').addClass('selected');">Column</div>
	<div class="row" id="bar" onclick="changeChartType('bar');$('.row').removeClass('selected');$('#bar').addClass('selected');">Bar</div>
	<div class="row" id="line" onclick="changeChartType('line');$('.row').removeClass('selected');$('#line').addClass('selected');">Line</div>
	<div class="row" id="pie" onclick="changeChartType('pie');$('.row').removeClass('selected');$('#pie').addClass('selected');">Pie</div>
	<div class="row" id="table" onclick="changeChartType('table');$('.row').removeClass('selected');$('#table').addClass('selected');">Table</div>
	<div class="row" id="area" onclick="changeChartType('area');$('.row').removeClass('selected');$('#area').addClass('selected');">Area</div>
</div>

<div id="right">
	<h1>Analytics Explorer</h1>
	<div id="chartArea">
		<p>Welcome to the analytics explorer, <%= @user["firstName"] %>. This app is hosted on Heroku and uses the new Analytics API that is being released in the Summer '13 update. To get started, pick a report on the left from the dropdown. Choose a chart type to change how the report is rendered. Some reports obviously work better with different chart types. If you want to see what's happening behind the scenes, click the code tab at the top to see the requests that are being made to Salesforce, and the responses that are being returned. If you have any questions feel free to <a href="https://na1.salesforce.com/myid">chatter me</a>.
		<div id="report"></div>
	</div>
</div>

<div id="code">
	<h1 style="margin-bottom: 30px;">How It Works</h1>
	<p>
	<p>This is how the charts are generated for the '<span id="chartTitlePrint"></span>' report. The first thing you do is send a request to Salesforce to get the chart data. The request is basically asking Salesforce to return all the values in the report with id <span id="reportIdPrint"></span>:</p>
	<pre class="prettyprint" id="request1Print"></pre>
	<p>This is the response that Salesforce returns:</p>
	<pre class="prettyprint" id="reponse1Print"></pre>
	<p>
		In the response you get a couple of objects that allows you to populate the chart.
		<ul>
			<li>acrossDim contains all the label information for the across dimension groupings and sub-groupings.</li>
			<li>downDim contains all the label information for the down dimension groupings and sub-groupings.</li>
			<li>factMap contains all the values for the groupings and sub-groupings.</li>
		</ul>
	</p>
	<p>Once you have the initial data you now make a second request to Salesforce to get the metadata for the same report. Metadata tells you what type of chart it is, the name of the chart and the axis labels:</p>
	<pre class="prettyprint" id="request2Print"></pre>
	<p>This is the response that Salesforce returns:</p>
	<pre class="prettyprint" id="reponse2Print"></pre>
	<p>The response returned gives you the following objects:
		<ul>
			<li>reportMetadata contains labels for the dimensions, aggregates and the report name</li>
			<li>reportExtendedMetadata contains more detailed information for each label</li>
		</ul>
	</p>
	<p>Using all of the returned data from the 2 reponses, you can check what type of report it is, create an array of data and values and then use that array to populate a chart.</p>
</div>


<script type="text/javascript">

	google.load("visualization", "1", {packages:["corechart"]});
	google.load('visualization', '1', {packages: ['table']});
	var googleChart = null;
	var options = null;
	var data = null;
	var hAxisTitle = " ";
	var vAxisTitle = " ";
	var chartTitle = " ";
	var optionType = 1;
	var reportid = " ";

	function changeChartType(type){

		$('#right>h1').html(chartTitle);
		$('#chartArea p').hide();

		switch(type){
			case 'bar':	googleChart =  new google.visualization.BarChart(document.getElementById('report')); optionType = 2;break;
			case 'line': googleChart =  new google.visualization.LineChart(document.getElementById('report')); optionType = 1; break;
			case 'area': googleChart =  new google.visualization.AreaChart(document.getElementById('report')); optionType = 1; break;
			case 'column': googleChart =  new google.visualization.ColumnChart(document.getElementById('report')); optionType = 1; break;
			case 'pie':	googleChart =  new google.visualization.PieChart(document.getElementById('report')); optionType = 1; break;
			case 'table':	googleChart =  new google.visualization.Table(document.getElementById('report')); optionType = 1; break;
		}

		switch(optionType){
			case 1 : 	options = {
							isStacked: true,
							hAxis: {title: hAxisTitle, titleTextStyle: {color: '#0059a9', fontSize: '16'}, baselineColor: '#eeeeee', gridlines: {color: '#eeeeee'}, textStyle: {color: '#6e6e6e'}},
							vAxis: {title: vAxisTitle, titleTextStyle: {color: '#0059a9', fontSize: '16'}, baselineColor: '#eeeeee', gridlines: {color: '#eeeeee'}, textStyle: {color: '#6e6e6e'}},
							animation: {duration: 1000, easing: 'out'},
							legend: {textStyle: {color: '#6e6e6e'}},
							tooltip: {textStyle: {color: '#6e6e6e'}},
							chartArea:{top:30},
							width: '643'
						};
			break;
			case 2 : 	options = {
							isStacked: true,
							vAxis: {title: hAxisTitle, titleTextStyle: {color: '#0059a9', fontSize: '16'}, baselineColor: '#eeeeee', gridlines: {color: '#eeeeee'}, textStyle: {color: '#6e6e6e'}},
							hAxis: {title: vAxisTitle, titleTextStyle: {color: '#0059a9', fontSize: '16'}, baselineColor: '#eeeeee', gridlines: {color: '#eeeeee'}, textStyle: {color: '#6e6e6e'}},
							animation: {duration: 1000, easing: 'out'},
							legend: {textStyle: {color: '#6e6e6e'}},
							tooltip: {textStyle: {color: '#6e6e6e'}},
							chartArea:{top:30},
							width: '643'
						};
			break;
		}
		googleChart.draw(data,options);	
	}

	function drawChart(json, meta) {
		console.log(json);
		console.log(meta);
		hAxisTitle = " ";
		vAxisTitle = " ";
		chartTitle = meta.reportMetadata.name;

		if(meta.reportExtendedMetadata.reportDimensionColumnInfo[meta.reportMetadata.downDimensions[0]] != null){
			hAxisTitle = meta.reportExtendedMetadata.reportDimensionColumnInfo[meta.reportMetadata.downDimensions[0]].displayName;
		}
		if(meta.reportExtendedMetadata.reportAggregateColumnInfo[meta.reportMetadata.aggregates[0]]){
			vAxisTitle = meta.reportExtendedMetadata.reportAggregateColumnInfo[meta.reportMetadata.aggregates[0]].displayName;
		}

		//Create the chart data
		chart = [];
		var header = [hAxisTitle];

		if((json.acrossDim != null && json.acrossDim.groupings != null) || (json.downDim != null && json.downDim.groupings != null)){
			//Matrix Report
			if(json.acrossDim != null && json.acrossDim.groupings != null){
				$.each(json.acrossDim.groupings, function(i, item) {
					header.push(item.label);
				}); 
				$.each(json.downDim.groupings, function(i, item) {
					var row = [item.label];
		          	for(var j = 0; j < json.acrossDim.groupings.length; j++){
		          		if(json.factMap[i + '!' + j].aggs.length > 0){
		          			row.push(json.factMap[i + '!' + j].aggs[0].value);
	          			}else{
							row.push(0);
						}
		          	}
		          	chart.push(row);
				});
			//Summary Report
			}else if(json.downDim.groupings[0].subGroupings != null) {

				$.each(json.downDim.groupings, function(i, item) {
					$.each(item.subGroupings, function(subi, subitem) {
						if($.inArray(subitem.label, header) == -1){
						    header.push(subitem.label);
						}
					}); 
				}); 
				$.each(json.downDim.groupings, function(i, item) {
					var row = [item.label];
		          	for(var j = 1; j < header.length; j++){
		          		row.push(0);
		          	}
					$.each(item.subGroupings, function(subi, subitem) {
			          	for(var k = 1; k < header.length; k++){
			          		if(subitem.label == header[k] && json.factMap[i + '_' + subi + '!T'].aggs.length > 0){
		          				row[k] = json.factMap[i + '_' + subi + '!T'].aggs[0].value;
			          		}
			          	}
					});
		          	chart.push(row);
				});
			//Tabular Report
			}else {
				header.push(vAxisTitle);
				$.each(json.downDim.groupings, function(i, item) {
					var row = [item.label];
					if(json.factMap[i + '!T'].aggs.length > 0){
						row.push(json.factMap[i + '!T'].aggs[0].value);
					}else{
						row.push(0);
					}
		          	chart.push(row);
				}); 
			}
			chart.unshift(header);

			//Create the chart
			data = google.visualization.arrayToDataTable(chart);

			switch(optionType){
				case 1 : 	options = {
								isStacked: true,
								hAxis: {title: hAxisTitle, titleTextStyle: {color: '#0059a9', fontSize: '16'}, baselineColor: '#eeeeee', gridlines: {color: '#eeeeee'}, textStyle: {color: '#6e6e6e'}},
								vAxis: {title: vAxisTitle, titleTextStyle: {color: '#0059a9', fontSize: '16'}, baselineColor: '#eeeeee', gridlines: {color: '#eeeeee'}, textStyle: {color: '#6e6e6e'}},
								animation: {duration: 1000, easing: 'out'},
								legend: {textStyle: {color: '#6e6e6e'}},
								tooltip: {textStyle: {color: '#6e6e6e'}},
								chartArea:{top:30},
								width: '643'
							};
				break;
				case 2 : 	options = {
								isStacked: true,
								vAxis: {title: hAxisTitle, titleTextStyle: {color: '#0059a9', fontSize: '16'}, baselineColor: '#eeeeee', gridlines: {color: '#eeeeee'}, textStyle: {color: '#6e6e6e'}},
								hAxis: {title: vAxisTitle, titleTextStyle: {color: '#0059a9', fontSize: '16'}, baselineColor: '#eeeeee', gridlines: {color: '#eeeeee'}, textStyle: {color: '#6e6e6e'}},
								animation: {duration: 1000, easing: 'out'},
								legend: {textStyle: {color: '#6e6e6e'}},
								tooltip: {textStyle: {color: '#6e6e6e'}},
								chartArea:{top:30},
								width: '643'
							};
				break;
			}

			if(googleChart == null){
				googleChart =  new google.visualization.ColumnChart(document.getElementById('report')); 
			}else{
				googleChart.draw(data,options);
				$('#right>h1').html(chartTitle);
				$('#chartArea p').hide();
			}

			$('#reportIdPrint').html(reportid);
			$('#chartTitlePrint').html(chartTitle);
			$('#reponse1Print').html(JSON.stringify(json, null, 3));
			$('#request1Print').html('/services/data/v27.0/analytics/reports/' + reportid);
			$('#reponse2Print').html(JSON.stringify(meta, null, 3));
			$('#request2Print').html('/services/data/v27.0/analytics/reports/' + reportid + '/describe');
			$('#reloadimg').removeClass('loading');

		}else{
			console.log('Report contains no data');
		}
	}

	$(document).ready(function(){
		$('#reloadimg').click(function(e) {
			$('#reloadimg').addClass('loading');
	    	$('#code').hide();
	    	$('#right').show();
	    	$('#codeTab').removeClass('selected');
	    	$('#reportTab').addClass('selected');
        	$('#fetchreport').submit();
		});

	    $('#reportid').change(function(e) {
	    	$('#reloadimg').addClass('loading');
	    	$('#code').hide();
	    	$('#right').show();
	    	$('#codeTab').removeClass('selected');
	    	$('#reportTab').addClass('selected');
	    	reportid = e.target.options[e.target.selectedIndex].value;
        	$('#fetchreport').submit();
    	});

		$('#fetchreport').submit(function(){  
			var valuesToSubmit = $(this).serialize();
			$.ajax({
				url: $(this).attr('action'),
				data: valuesToSubmit,
				dataType: "JSON",
				type: 'POST'
			}).success(function(json){
				drawChart(json.data, json.meta);
			});
			return false;
		});

		$('#fetchreport').submit();

	});
</script>
